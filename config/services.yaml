# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    myName: 'Max'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.
        bind:
            $myName: "%myName%"

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    #App\Service\:
    #    resource: '../src/Service'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # explicitly configure the service
    App\Updates\SiteUpdateManager:
        arguments:
            $adminEmail: 'manager@example.com'

    # this is the service's id
    manual.boss:
        class: App\Service\Manual
        # you CAN still use autowiring: we just want to show what it looks like without
        autowire: false
        # manually wire all arguments
        arguments:
            - '@App\Service\Test'
            - 'Hans Gruber'

    manual.soldier:
        class: App\Service\Manual
        autowire: false
        arguments:
            - '@App\Service\Test'
            - 'Carl'

    # Create an alias, so that - by default - if you type-hint Manual,
    # the manual.soldier will be used
    App\Service\Manual: '@manual.boss'

    # this is the service's id
    App\Service\Cook:
       # you CAN still use autowiring: we just want to show what it looks like without
        autowire: false
        # manually wire all arguments
        autoconfigure: false
        arguments:
            - '@App\Service\Test'
            - "%myName%"
        calls:
            - method: ring
              arguments:
                  - 'HOHOHO'


